{"version":3,"sources":["components/part2_Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","console","log","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"iNAGMA,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KAK3BH,ICCAQ,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OADAC,QAAQC,IAAIF,GACI,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCOQ,EAfA,WAEb,OADgBG,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCVrCK,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGAkGSC,EA7FH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAC5B,iBAHmB,mBAEdG,EAFc,KAELC,EAFK,OAKSJ,oBAAS,GALlB,mBAKdK,EALc,KAKLC,EALK,OAMmBN,mBAAS,0BAN5B,mBAMdO,EANc,KAMAC,EANA,KAQrBC,qBAAU,WACRC,IAEGxB,MAAK,SAAAyB,GACJT,EAASS,QAEZ,IACH7B,QAAQC,IAAI,SAAUkB,EAAMW,OAAQ,SAEpC,IAAMC,EAAcR,EAChBJ,EACAA,EAAMa,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aA2C9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAAS0B,IACvB,6BACE,4BAAQ5B,QAAS,kBAAM2B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGQ,EAAYE,KAAI,SAAA1C,GAAI,OACnB,kBAAC,EAAD,CACE2C,IAAK3C,EAAKkB,GACVlB,KAAMA,EACNC,iBAAkB,kBAvDD,SAACiB,GAC1B,IAAMlB,EAAO4B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAOA,KAChC4B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDkC,EACUnB,EAAI4B,GACXjC,MAAK,SAAAkC,GACJlB,EAASD,EAAMc,KAAI,SAAA1C,GAAI,OAAIA,EAAKkB,KAAOA,EAAKlB,EAAO+C,SAEpDC,OAAM,SAAAC,GACLd,EAAgB,SAAD,OACJnC,EAAKK,QADD,sCAGf6C,YAAW,WACTzC,QAAQC,IAAI,SACZyB,EAAgB,QACf,QAEP1B,QAAQC,IAAR,wBAA6BQ,EAA7B,yBAqCgCiC,CAAmBnD,EAAKkB,WAItD,0BAAMkC,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASyB,EACT0B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAE7BvB,EACUkB,GACP1C,MAAK,SAAAkC,GACJlB,EAASD,EAAMiC,OAAOd,IACtBhB,EAAW,SA4BX,2BACE+B,MAAOhC,EACPiC,SA1BiB,SAACV,GACxB5C,QAAQC,IAAI2C,EAAMW,OAAOF,OACzB/B,EAAWsB,EAAMW,OAAOF,UA0BpB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,Q,MCtGNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3510005f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n\n// ---\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nconst App = () => {\n\n  return (\n    <div>\n      <h1>notes</h1>\n      <ul>\n       {notes.map(o => \n        <Note key={o.id} note={o}/>\n       )}\n      </ul>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Notification = ({ message }) => {\n  console.log(message)\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, \n  create,\n  update,\n}","import React,{ useState, useEffect } from 'react';\nimport Note from './components/part2_Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div> \n  )\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          console.log('clear')\n          setErrorMessage(null)\n        }, 5000)\n      })\n    console.log(`importance of ${id} needs to be toggled`)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n  \n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}